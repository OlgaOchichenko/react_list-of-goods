{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","setState","sortByAlpabet","sortByLength","reset","this","className","type","claccNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAc7C,OAPIR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAtCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA8CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEL,QAAU,kBAAM,EAAKM,UAAS,SAACF,GAAD,MAAmB,CAC/Cb,YAAaa,EAAMb,gBAPvB,EAUEgB,cAAgB,kBAAM,EAAKD,UAAS,iBAAO,CACzChB,SAAUJ,EAASO,aAXvB,EAcEe,aAAe,WACb,EAAKF,SAAS,CAAEhB,SAAUJ,EAASY,UAfvC,EAkBEW,MAAQ,WACN,EAAKH,SAAS,CAAEhB,SAAUJ,EAASmB,KAAMd,YAAY,KAnBzD,4CAsBE,WACE,MAAiCmB,KAAKN,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYvB,IAAaJ,EAASO,UAEtCqB,QAASJ,KAAKH,cANhB,iCAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,qBACA,CAAE,WAAYvB,IAAaJ,EAASY,SAEtCgB,QAASJ,KAAKF,aANhB,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,sBACA,CAAE,YAA2B,IAAftB,IAEhBuB,QAASJ,KAAKV,QANhB,sBAWEV,IAAaJ,EAASmB,MAAQd,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,MAHhB,sBAUJ,6BACE,6BAEIrB,EAAkBD,EAAiBuB,KAAKN,OAAOW,KAAI,SAACC,GAAD,OACjD,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA9EvB,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3734e838.chunk.js","sourcesContent":["import React from 'react';\nimport claccNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => this.setState((state: State) => ({\n    isReversed: !state.isReversed,\n  }));\n\n  sortByAlpabet = () => this.setState(() => ({\n    sortType: SortType.ALPABET,\n  }));\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={claccNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.sortByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={claccNames(\n              'button is-success ',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={claccNames(\n              'button is-warning  ',\n              { 'is-light': isReversed === false },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {\n              getReorderedGoods(goodsFromServer, this.state).map((good) => (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))\n            }\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}